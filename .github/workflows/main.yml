on:
  push:
    branches:
      - main
      - development

jobs:
  Tests:
    runs-on: ubuntu-latest
    steps:
      # Загружаем код репозитория в окружение
      - name: Checkout repository
        uses: actions/checkout@v3
      # Проверим стиль кода
      - name: Run linters
        uses: Jerome1337/golint-action@v1.0.2
        with:
          golint-path: |
            ./cmd/**/*.go
            ./internal/**/*.go
            ./pkg/**/*.go
      # Устанавливаем Go
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21.0'
      #      # Устанавливаем зависимости
      #      - name: Install dependencies
      #        run: 'go mod download'
      # Запускаем модульные тесты
      - name: Run Go tests
        run: 'go test -cover -race ./...'
  Deploy:
    needs:
      - Tests
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    # Запускать на последней версии Ubuntu
    runs-on: ubuntu-latest

    # Шаги
    steps:
      # Загружаем код репозитория в окружение
      - name: Checkout repository
        uses: actions/checkout@v3

      # Загружаем serverless-функцию в Yandex Cloud
      - name: Deploy Function
        id: sls-func
        uses: yc-actions/yc-sls-function@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          function-name: ${{ secrets.YC_FUNCTION_NAME }}
          runtime: ${{ vars.FUNCTION_RUNTIME }}
          memory: ${{ vars.FUNCTION_MEMORY }}
          entrypoint: 'cmd/bot/main.Handler'
          service-account: ${{ secrets.YC_SERVICE_ACCOUT_ID }}
          environment: |
            CHAT_ADMINS=${{ vars.CHAT_ADMINS }}
            HOUSE_CHAT_ID=${{ vars.HOUSE_CHAT_ID }}
            HOME_THREAD_BOT=${{ vars.HOME_THREAD_BOT }}
            ADMINISTRATION_CHAT_ID=${{ vars.ADMINISTRATION_CHAT_ID }}
          secrets: |
            TELEGRAM_BOT_TOKEN=${{ secrets.YC_LOCKBOX_ID }}/${{ secrets.YC_LOCKBOX_VERSION }}/TELEGRAM_BOT_TOKEN
            LLM_API_TOKEN=${{ secrets.YC_LOCKBOX_ID }}/${{ secrets.YC_LOCKBOX_VERSION }}/LLM_API_TOKEN
            LLM_FOLDER_ID=${{ secrets.YC_LOCKBOX_ID }}/${{ secrets.YC_LOCKBOX_VERSION }}/LLM_FOLDER_ID
          include: |
            ./cmd/**/*.go
            ./internal/**/*.go
            ./pkg/**/*.go
            ./go.mod
          execution-timeout: ${{ vars.EXECUTION_TIMEOUT }}
          log-level: ${{ vars.LOG_LEVEL }}
          logs-group-id: ${{ secrets.LOG_GROUP_ID }}
