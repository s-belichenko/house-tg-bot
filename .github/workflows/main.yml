on:
  push:
    branches:
      - main
      - development

jobs:
  Linters:
    runs-on: ubuntu-latest
    steps:
      # Загружаем код репозитория в окружение
      - name: Checkout repository
        uses: actions/checkout@v3
      # Устанавливаем Go
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21.0'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.0
          only-new-issues: false
          skip-cache: true
  Tests:
    needs:
      - Linters
    runs-on: ubuntu-latest
    steps:
      # Загружаем код репозитория в окружение
      - name: Checkout repository
        uses: actions/checkout@v3
      # Устанавливаем Go
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21.0'
      # Запускаем модульные тесты
      - name: Run Go tests
        run: 'go test -cover -race ./...'
  Deploy:
    needs:
      - Tests
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    # Запускать на последней версии Ubuntu
    runs-on: ubuntu-latest

    # Шаги
    steps:
      # Загружаем код репозитория в окружение
      - name: Checkout repository
        uses: actions/checkout@v3

      # Загружаем serverless-функцию в Yandex Cloud
      - name: Deploy Function
        id: sls-func
        uses: yc-actions/yc-sls-function@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          function-name: ${{ secrets.YC_FUNCTION_NAME }}
          runtime: ${{ vars.FUNCTION_RUNTIME }}
          memory: ${{ vars.FUNCTION_MEMORY }}
          entrypoint: 'cmd/bot/main.Handler'
          service-account: ${{ secrets.YC_SERVICE_ACCOUT_ID }}
          environment: |-
            HOUSE_CHAT_ID=${{ vars.HOUSE_CHAT_ID }}
            HOME_THREAD_BOT=${{ vars.HOME_THREAD_BOT }}
            ADMINISTRATION_CHAT_ID=${{ vars.ADMINISTRATION_CHAT_ID }}
            RULES_URL=${{ vars.RULES_URL }}
            OWNER_NICKNAME=${{ vars.OWNER_NICKNAME }}
            INVITE_URL=${{ vars.INVITE_URL }}
            TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            LLM_API_TOKEN=${{ secrets.LLM_API_TOKEN }}
            LLM_FOLDER_ID=${{ secrets.LLM_FOLDER_ID }}
            BOT_NAME=${{ vars.BOT_NAME }}
            BOT_NICKNAME=${{ vars.BOT_NICKNAME }}
            HOME_ADDRESS=${{ vars.HOME_ADDRESS }}
            VERIFY_RULES='${{ vars.VERIFY_RULES }}'
          include: |
            ./cmd/**/*.go
            ./internal/**/*.go
            ./pkg/**/*.go
            ./go.mod
          execution-timeout: ${{ vars.EXECUTION_TIMEOUT }}
          log-level: ${{ vars.LOG_LEVEL }}
          logs-group-id: ${{ secrets.LOG_GROUP_ID }}
