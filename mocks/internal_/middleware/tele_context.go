// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	telebot "gopkg.in/telebot.v4"
)

// TeleContext is an autogenerated mock type for the TeleContext type
type TeleContext struct {
	mock.Mock
}

type TeleContext_Expecter struct {
	mock *mock.Mock
}

func (_m *TeleContext) EXPECT() *TeleContext_Expecter {
	return &TeleContext_Expecter{mock: &_m.Mock}
}

// Chat provides a mock function with no fields
func (_m *TeleContext) Chat() *telebot.Chat {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Chat")
	}

	var r0 *telebot.Chat
	if rf, ok := ret.Get(0).(func() *telebot.Chat); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*telebot.Chat)
		}
	}

	return r0
}

// TeleContext_Chat_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Chat'
type TeleContext_Chat_Call struct {
	*mock.Call
}

// Chat is a helper method to define mock.On call
func (_e *TeleContext_Expecter) Chat() *TeleContext_Chat_Call {
	return &TeleContext_Chat_Call{Call: _e.mock.On("Chat")}
}

func (_c *TeleContext_Chat_Call) Run(run func()) *TeleContext_Chat_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *TeleContext_Chat_Call) Return(_a0 *telebot.Chat) *TeleContext_Chat_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *TeleContext_Chat_Call) RunAndReturn(run func() *telebot.Chat) *TeleContext_Chat_Call {
	_c.Call.Return(run)
	return _c
}

// Sender provides a mock function with no fields
func (_m *TeleContext) Sender() *telebot.User {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Sender")
	}

	var r0 *telebot.User
	if rf, ok := ret.Get(0).(func() *telebot.User); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*telebot.User)
		}
	}

	return r0
}

// TeleContext_Sender_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Sender'
type TeleContext_Sender_Call struct {
	*mock.Call
}

// Sender is a helper method to define mock.On call
func (_e *TeleContext_Expecter) Sender() *TeleContext_Sender_Call {
	return &TeleContext_Sender_Call{Call: _e.mock.On("Sender")}
}

func (_c *TeleContext_Sender_Call) Run(run func()) *TeleContext_Sender_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *TeleContext_Sender_Call) Return(_a0 *telebot.User) *TeleContext_Sender_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *TeleContext_Sender_Call) RunAndReturn(run func() *telebot.User) *TeleContext_Sender_Call {
	_c.Call.Return(run)
	return _c
}

// NewTeleContext creates a new instance of TeleContext. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTeleContext(t interface {
	mock.TestingT
	Cleanup(func())
}) *TeleContext {
	mock := &TeleContext{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
